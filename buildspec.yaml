version: 0.2

phases:

  install:

    commands:

      - echo "Install Phase - Nothing to do using latest Amazon Linux Docker Image for CodeBuild which has all AWS Tools - https://github.com/aws/aws-codebuild-docker-images/blob/master/al2/x86_64/standard/3.0/Dockerfile"

  pre_build:

      commands:

        # Docker Image Tag with Date Time & Code Buiild Resolved Source Version

        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"

        # Update Image tag in our Kubernetes Deployment Manifest        

        - echo "Update Image tag in kube-manifest..."

        # - sed -i '756234729041.dkr.ecr.us-east-2.amazonaws.com/your-repo-name:latest''756234729041.dkr.ecr.us-east-2.amazonaws.com/your-repo-name:latest' deployment.yaml
        - sed -i 's@134114849607.dkr.ecr.ap-south-1.amazonaws.com/your-repo-name:latest@134114849607.dkr.ecr.ap-south-1.amazonaws.com/your-repo-name:latest@g' deployment.yaml


        # Verify AWS CLI Version        

        - echo "Verify AWS CLI Version..."

        - aws --version

        # Update Kube config Home Directory

        - export KUBECONFIG=$HOME/.kube/config

  build:

    commands:

      # Build Docker Image

      - echo "Build started on `date`"

  post_build:

    commands:

      # Setup kubectl with our EKS Cluster
     
     
      - echo "Update Kube Config"      

      - aws eks update-kubeconfig --name sverlet-cluster

      # Apply changes to our Application using kubectl

      - echo "Apply changes to kube manifests"            
      - export AWS_ACCESS_KEY_ID=AKIAR6OO6GND5JJLH4WE
      - export AWS_SECRET_ACCESS_KEY=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
      - aws eks update-kubeconfig --name sverlet-cluster --region ap-south-1
      - kubectl config get-contexts
      - kubectl get nodes
      - kubectl get pods
      - kubectl apply -f deployment.yaml
      - kubectl apply -f service.yaml

      - echo "Completed applying changes to Kubernetes Objects"  